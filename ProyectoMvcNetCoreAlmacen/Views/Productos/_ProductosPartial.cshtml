@model IEnumerable<NugetProyectoAlmacen.Models.Producto>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<div class="row">
	@foreach (var item in Model)
	{
		<div class="item features-image col-12 col-md-6 col-lg-3">
			<div class="item-wrapper @(item.Estado ? "" : "producto-inactivo")">
				<div class="item-img">
					<img src="@Url.Content("~/imagenes/" + item.Imagen)"
						 onerror="this.onerror=null;this.src='https://static.vecteezy.com/system/resources/previews/005/720/408/non_2x/crossed-image-icon-picture-not-available-delete-picture-symbol-free-vector.jpg';"
						 alt="Imagen del producto"
						 title="@item.Nombre">
					<h6 class="item-subtitle mbr-fonts-style text-muted mb-0 mt-2 display-7"
						style="font-style: italic; font-size: 0.8em; display: block; text-align: center;">
						Num artículo: @item.IdProducto
					</h6>
					<span class="item-subtitle mbr-fonts-style mb-0 mt-2 display-4"
						  style="position: absolute; bottom: 2px; left:6px;">
						@item.Stock
					</span>
					<span data-toggle="modal" data-target="#accionesModal"
						  onclick="setModalActions(@item.IdProducto, '@item.Nombre')" class="mbri-bulleted-list item-subtitle"
						  style="position: absolute; bottom: 2px; right: 8px; font-size:24px"></span>
				</div>
				<div class="item-content">
					<h5 class="item-title mbr-fonts-style mt-0 mb-0 mbr-bold display-4">
						@item.Nombre
					</h5>
					<p class="mbr-text mbr-fonts-style mt-4 mb-0 display-7">Modelo: @item.Modelo</p>
					<h6 class="item-subtitle mbr-fonts-style mb-0 mt-2 display-4">
						@item.Precio €
					</h6>
					<h6 class="item-subtitle mbr-fonts-style text-muted mb-0 mt-2 display-7" style="font-style: italic;">
						@item.Proveedor.Nombre
					</h6>
					<p class="mbr-text mbr-fonts-style mb-0 mt-2 display-7">@item.Descripcion</p>
				</div>
				<div class="mbr-section-btn item-footer">
					<a class="btn item-btn btn-secondary-outline display-7"
					   asp-controller="Productos"
					   asp-action="Details"
					   asp-route-idproducto="@item.IdProducto">Detalles</a>
				</div>
			</div>
		</div>
	}
</div>


<div class="modal fade" id="accionesModal" tabindex="-1" role="dialog" aria-labelledby="accionesModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered d-flex align-items-center justify-content-center" role="document">
		<div class="modal-content" style="background-color: #f8f9fa; border-radius: 10px; width: 400px; height: 400px;">
			<div class="modal-header text-center" style="border-bottom: 1px solid #ddd;">
				<h5 class="modal-title w-100" id="accionesModalLabel"><span id="productoNombre"></span></h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body text-center">
				<form method="post" enctype="multipart/form-data" class="mbr-form form-with-styler" data-form-title="Mobirise Form">
					<div class="dragArea form-row">
						<div class="col-md-12 form-group text-left">
							<label class="form-control-label mbr-fonts-style mbr-bold display-7">Introduzca stock</label>
							<input type="number" id="cantidadStock" class="form-control input display-4" min="1" style="border: 2px solid black !important; min-height: 0px !important;">
							<br />
							<div class="d-flex">
								<button type="button" class="btn btn-form btn-info display-4 w-50 mr-2" style="border-radius:10px; font-size:34px;" onclick="actualizarStock(idProductoModal, true)">
									<i class="mbri-plus"></i>
								</button>
								<button type="button" class="btn btn-form btn-info display-4 w-50" style="border-radius:10px; font-size:34px;" onclick="actualizarStock(idProductoModal, false)">
									<i class="bi bi-dash"></i>
								</button>
								<a id="editarBtn"
								   asp-controller="Productos"
								   asp-action="Edit"
								   asp-route-idproducto="">
									<span class="mbr-iconfont socicon socicon mbri-edit2 circle-icon" style=" position: absolute; top: 213px; left:289px"></span>
								</a>
								<a>
									<button class="button" style=" position: absolute; top: 213px; right: 286px;" onclick="cambiarEstado(idProductoModal)">
										<span class="mbr-iconfont socicon socicon mbri-update circle-icon svgIcon"></span>
									</button>
								</a>
							</div>
						</div>
				</form>
			</div>
		</div>
	</div>
</div>



<script>
	let idProductoModal;
	function setModalActions(idProducto, nombreProducto) {
		idProductoModal = idProducto;
	document.getElementById("productoNombre").innerText = nombreProducto;
	let editarBtn = document.getElementById("editarBtn");
	if (editarBtn) {
		editarBtn.href = `/Productos/Edit?idproducto=${idProductoModal}`;
	}

	}
	function actualizarStock(idProducto, sumar) {
		let cantidad = parseInt(document.getElementById("cantidadStock").value) || 0;
		if (cantidad > 0) {
			let url = `/Productos/ActualizarStock?idproducto=${idProducto}&cantidad=${cantidad}&sumar=${sumar}`;
			fetch(url, { method: 'POST' })
				.then(response => {
					if (response.ok) {
						location.reload();
					}
				});
		}
	}

		function cambiarEstado(idProducto) {
		fetch(`/Productos/CambiarEstado?idproducto=${idProducto}`, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' }
		})
		.then(response => response.json())
		.then(data => {
			if (data.success) {
				let button = document.querySelector(`button[data-idproducto='${idProducto}']`);
				if (button) {
					let nuevoEstadoTexto = data.nuevoEstado ? "Activo" : "Inactivo";
					let nuevaClase = data.nuevoEstado ? "btn-success" : "btn-danger";
					let viejaClase = data.nuevoEstado ? "btn-danger" : "btn-success";

					button.classList.remove(viejaClase);
					button.classList.add(nuevaClase);
					button.innerHTML = nuevoEstadoTexto;

					// Mostrar el alert con el estado actualizado
					alert(`El estado ha cambiado a: ${nuevoEstadoTexto}`);
				}
			} else {
				alert("Hubo un error al cambiar el estado.");
			}
		})
		.catch(error => {
			console.error("Error:", error);
		});
	}

</script>

<style>
	.producto-inactivo {
		filter: grayscale(100%);
		opacity: 0.6;
	}


	.button {
		width: 40px;
		height: 40px;
		border-radius: 50%;
		background-color: white;
		border: none;
		font-weight: 600;
		display: flex;
		align-items: center;
		justify-content: center;
		border: 2px solid #f28b00;
		cursor: pointer;
		overflow: hidden;
		position: relative;
	}

	.svgIcon {
		width: 12px;
		transition-duration: 0.3s;
	}

		.svgIcon path {
			fill: white;
		}

	.button:hover {
		width: 140px;
		border-radius: 50px;
		transition-duration: 0.3s;
		background-color: white;
		align-items: center;
		justify-content: start;
		padding-left: 15px;
		transform: translateX(50%);
	}

	.button .svgIcon path {
		fill: #f28b00;
	}

	.button:hover .svgIcon {
		transition-duration: 0.3s;
		transform: translateY(-200%);
	}

		.button:hover .svgIcon path {
			fill: #f28b00;
		}


	.button::before {
		position: absolute;
		bottom: -20px;
		content: "Cambiar estado";
		color: #f28b00;
		font-size: 0px;
	}

	.button:hover::before {
		opacity: 1;
		bottom: unset;
		transition-duration: 0.3s;
		left: 20px;
		font-size: 12px;
	}

	.circle-icon {
		display: inline-block;
		border: 2px solid #f28b00; /* Borde naranja */
		color: #f28b00; /* Color del icono */
		border-radius: 50%; /* Hace el borde circular */
		padding: 8px; /* Espaciado alrededor del icono */
		font-size: 20px; /* Tamaño del icono */
		text-align: center; /* Centra el icono dentro del borde */
		width: 40px; /* Tamaño del círculo */
	}

	.stock-input {
		border: none;
		border-bottom: 2px solid black;
		outline: none;
		background: transparent;
		box-shadow: none;
		width: 100%;
	}

		.stock-input:focus {
			border-bottom: 2px solid black;
			outline: none;
		}

	.modal-dialog {
		max-width: 450px; /* Tamaño fijo */
		min-width: 350px;
	}

	.modal-content {
		padding: 20px;
		border-radius: 12px;
	}

</style>